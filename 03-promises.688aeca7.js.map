{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASG,kBAAkB,UACnCC,MAAOJ,SAASG,kBAAkB,SAClCE,KAAML,SAASG,kBAAkB,QACjCG,UAAWN,SAASO,qBAAqB,WA6B3C,SAASC,EAAcC,EAAUL,GAE5B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAC5BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACF,WAAUL,UAEnBQ,EAAO,CAACH,WAAUL,S,GAEnBA,E,IApCTN,EAAKC,KAAKiB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAUJ,IARA,IAAMC,EAAW,CACff,MAAOgB,OAAOtB,EAAKM,MAAMiB,OACzBhB,KAAMe,OAAOtB,EAAKO,KAAKgB,OACvBnB,OAAQkB,OAAOtB,EAAKI,OAAOoB,SAGzBC,EAAUJ,EAASf,MAEdoB,EAAI,EAAGA,GAAKL,EAASjB,OAAQsB,IACpChB,EAAcgB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUL,EAAKsB,EAALtB,MACjBR,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAJ,G,IAAGjB,EAAQiB,EAARjB,SAAUL,EAAKsB,EAALtB,MAClBR,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANzB,EAAM,M,IAE9DmB,GAAWJ,EAASd,KACpBP,EAAKC,KAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst Refs = {\n  form: document.querySelector('.form'),\n  amount: document.getElementsByName('amount'),\n  delay: document.getElementsByName('delay'),\n  step: document.getElementsByName('step'),\n  submitBtn: document.getElementsByTagName('button')\n}\n\nRefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const formData = {\n    delay: Number(Refs.delay.value),\n    step: Number(Refs.step.value),\n    amount: Number(Refs.amount.vaslue)    \n  }\n\n  let counter = formData.delay;\n\n  for (let i = 1; i <= formData.amount; i++) {\n    createPromise(i, counter)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    counter += formData.step;\n    Refs.form.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  \n     return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({position, delay});\n        } else {\n          reject({position, delay});\n        };\n      }, delay);\n    });\n};\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$Refs","form","document","querySelector","amount","getElementsByName","delay","step","submitBtn","getElementsByTagName","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","formData","Number","value","vaslue","counter","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.688aeca7.js.map"}